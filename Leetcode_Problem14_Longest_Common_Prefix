char * longestCommonPrefix(char ** strs, int strsSize){
    for(int i = 1; i < strsSize; i++)
    {
        for(int j = 0; strs[0][j]; j++)
        {
            if(!strs[i][j] || (strs[0][j] != strs[i][j]))
            {
                strs[0][j] = '\0';
                break;
            }
        }
    }
    return strs[0];
}


----------------------------------------------------------------------------


char * longestCommonPrefix(char ** strs, int strsSize){
    if (strsSize == 1) return strs[0];
    int i = 0;
    for(i = 0; strs[0][i] != '\0'; i++){
        char c = strs[0][i];
        for(int j = 0; j < strsSize; j++){
            if(strs[j][i] != c){
                strs[j][i] = '\0';
                return strs[j];
            }   
        }
    }
    strs[0][i] = '\0';
    return strs[0];
}


-------------------------------------------------------------------------------------



char *longestCommonPrefix(char **strs, int strsSize)
{
	for(int c=0;; ++c)
	{
		if(strs[0][c] == '\0') // the longest common prefix is the first string
			return strs[0];
		for(int s=1; s<strsSize; ++s)
		{
			if(strs[s][c] != strs[0][c]) // compare all strings character to the first one
			{
				strs[0][c] = '\0'; // replace the current character with '\0'
				return strs[0];
			}
		}
	}
}
